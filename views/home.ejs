<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>파일 관리</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<%- include('layout', { user: user }) %>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-10">
            <div class="d-flex justify-content-between align-items-center">
                <h5>파일 관리</h5>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="fileDropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        선택
                    </button>
                    <div class="dropdown-menu" aria-labelledby="fileDropdownMenuButton">
                        <a class="dropdown-item" href="#" id="my-files">내 저장소</a>
                        <a class="dropdown-item" href="#" id="shared-files">공유받은 물품들</a>
                    </div>
                </div>
            </div>
            <form id="upload-form" class="mb-3">
                <div class="form-group">
                    <label for="file">파일 선택</label>
                    <input type="file" class="form-control-file" id="file" name="file">
                </div>
                <button type="submit" class="btn btn-primary">파일 업로드</button>
            </form>
            <div class="row" id="file-list">
                <!-- 파일 리스트가 여기에 표시됩니다 -->
            </div>
        </div>
    </div>
</div>

<!-- 공유하기 모달 -->
<div class="modal fade" id="shareModal" tabindex="-1" aria-labelledby="shareModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="shareModalLabel">파일 공유하기</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h5 id="modalFileName" class="mb-3"></h5>
                <form id="share-form">
                    <div class="form-group">
                        <label for="shareUserId">공유할 사용자 ID</label>
                        <input type="text" class="form-control" id="shareUserId" name="shareUserId" required>
                    </div>
                    <button type="submit" class="btn btn-primary">공유하기</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- jQuery와 Popper.js를 포함한 Bootstrap JS 로드 -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
    const uploadForm = document.getElementById('upload-form');
    const fileList = document.getElementById('file-list');
    const myFilesBtn = document.getElementById('my-files');
    const sharedFilesBtn = document.getElementById('shared-files');
    const shareForm = document.getElementById('share-form');
    const modalFileName = document.getElementById('modalFileName');
    let currentFileId;
    let currentFileName;

    uploadForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const formData = new FormData(uploadForm);

        fetch('/upload', {
            method: 'POST',
            body: formData
        }).then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('파일 업로드 성공');
                loadFiles();
            } else {
                alert('파일 업로드 실패');
            }
        }).catch(error => {
            console.error('Error:', error);
        });
    });

    function loadFiles(endpoint = '/files') {
        fetch(endpoint)
        .then(response => response.json())
        .then(data => {
            fileList.innerHTML = '';

            data.forEach(file => {
                const fileItem = document.createElement('div');
                fileItem.className = 'col-md-5 d-flex align-items-stretch';

                if (endpoint === '/files') {
                    fileItem.innerHTML = `
                        <div class="card mb-3 w-100">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">${file.original_filename}</h5>
                                <a href="/download/${file.id}" class="btn btn-primary mt-auto">다운로드</a>
                                <button class="btn btn-danger mt-2" onclick="deleteFile(${file.id})">삭제</button>
                                <button class="btn btn-secondary mt-2" onclick="openShareModal(${file.id}, '${file.original_filename}')">공유하기</button>
                            </div>
                        </div>
                    `;
                } else if (endpoint === '/shared-files') {
                    fileItem.innerHTML = `
                        <div class="card mb-3 w-100">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">${file.original_filename}</h5>
                                <a href="/download/${file.id}" class="btn btn-primary mt-auto">다운로드</a>
                                <button class="btn btn-danger mt-2" onclick="removeShare(${file.id})">공유 삭제</button>
                            </div>
                        </div>
                    `;
                }

                fileList.appendChild(fileItem);
            });
        });
    }

    function deleteFile(fileId) {
        fetch(`/delete/${fileId}`, {
            method: 'DELETE'
        }).then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('파일 삭제 성공');
                loadFiles('/files');
            } else {
                alert('파일 삭제 실패');
            }
        }).catch(error => {
            console.error('Error:', error);
        });
    }

    function removeShare(fileId) {
        fetch(`/remove-share/${fileId}`, {
            method: 'DELETE'
        }).then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('공유 삭제 성공');
                loadFiles('/shared-files');
            } else {
                alert('공유 삭제 실패');
            }
        }).catch(error => {
            console.error('Error:', error);
        });
    }

    function openShareModal(fileId, fileName) {
        currentFileId = fileId;
        currentFileName = fileName;
        modalFileName.textContent = `파일명: ${fileName}`;
        $('#shareModal').modal('show');
    }

    shareForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const shareUserId = document.getElementById('shareUserId').value;
        
        const data = {
            fileId: currentFileId,
            sharedUserId: shareUserId,
            originalFilename: currentFileName
        };

        fetch('/share', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('파일 공유 성공');
                $('#shareModal').modal('hide');
            } else {
                alert('파일 공유 실패');
            }
        }).catch(error => {
            console.error('Error:', error);
        });
    });

    myFilesBtn.addEventListener('click', (event) => {
        event.preventDefault();
        loadFiles('/files');
    });

    sharedFilesBtn.addEventListener('click', (event) => {
        event.preventDefault();
        loadFiles('/shared-files');
    });

    document.addEventListener('DOMContentLoaded', () => loadFiles('/files'));
</script>

</body>
</html>
