<%- include('layout', { user: null }) %>

<div class="container mt-5">
    <h2 class="text-center">비밀번호 재설정</h2>
    <form id="email-form">
        <div class="form-group">
            <label for="email">이메일</label>
            <input type="email" class="form-control" id="email" name="email" required>
            <button type="button" class="btn btn-primary mt-2" id="send-auth-code-btn">인증메일 보내기</button>
        </div>
    </form>
    <form id="auth-section" class="form-section" style="display: none;">
        <div class="form-group">
            <label for="auth-code">인증번호</label>
            <input type="text" class="form-control" id="auth-code" name="auth-code" required>
            <button type="button" class="btn btn-primary mt-2" id="verify-auth-code-btn">인증하기</button>
        </div>
        <div id="timer" class="mt-2 text-center">5:00</div>
    </form>
    <form id="password-reset-form" class="form-section" style="display: none;">
        <div class="form-group">
            <label for="new_password">새 비밀번호</label>
            <input type="password" class="form-control" id="new_password" name="new_password" required>
        </div>
        <div class="form-group">
            <label for="confirm_password">비밀번호 재입력</label>
            <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
        </div>
        <button type="button" class="btn btn-primary mt-3" id="reset-password-btn">비밀번호 변경하기</button>
    </form>
</div>

<script>
    const sendAuthCodeBtn = document.getElementById('send-auth-code-btn');
    const verifyAuthCodeBtn = document.getElementById('verify-auth-code-btn');
    const emailForm = document.getElementById('email-form');
    const authSection = document.getElementById('auth-section');
    const timerDisplay = document.getElementById('timer');
    const passwordResetForm = document.getElementById('password-reset-form');
    const resetPasswordBtn = document.getElementById('reset-password-btn');
    const newPasswordInput = document.getElementById('new_password');
    const confirmPasswordInput = document.getElementById('confirm_password');
    const emailInput = document.getElementById('email');
    const authCodeInput = document.getElementById('auth-code');

    let timerInterval;
    let isEmailVerified = false;

    sendAuthCodeBtn.addEventListener('click', () => {
        const email = emailInput.value;

        fetch('/email-duplication-check', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email })
        }).then(response => response.json())
        .then(data => {
            if (data.exists) {
                fetch('/send-auth-code', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email })
                }).then(response => response.json())
                .then(data => {
                    if (data.success) {
                        emailInput.disabled = true;
                        sendAuthCodeBtn.textContent = '인증메일 재전송';
                        authSection.style.display = 'block';
                        startTimer(5 * 60);
                        alert('메일이 성공적으로 발송되었습니다!');
                    } else {
                        alert(data.error);
                    }
                });
            } else {
                alert('해당 이메일로 가입된 아이디가 없습니다!');
            }
        }).catch(error => {
            console.error('Error checking email duplication:', error);
            alert('이메일 중복 확인 중 오류가 발생했습니다.');
        });
    });

    verifyAuthCodeBtn.addEventListener('click', () => {
        const email = emailInput.value;
        const authCode = authCodeInput.value;
        
        fetch('/verify-auth-code', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email, authCode })
        }).then(response => response.json())
        .then(data => {
            if (data.success) {
                clearInterval(timerInterval);
                passwordResetForm.style.display = 'block';
                timerDisplay.innerHTML = '';
                isEmailVerified = true;
            } else {
                alert(data.error);
            }
        }).catch(error => {
            console.error('Error verifying auth code:', error);
        });
    });

    resetPasswordBtn.addEventListener('click', () => {
        if (!isEmailVerified) {
            alert('이메일 인증이 필요합니다.');
            return;
        }

        const newPassword = newPasswordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        if (newPassword !== confirmPassword) {
            alert('비밀번호가 일치하지 않습니다.');
            return;
        }

        const data = {
            email: emailInput.value,
            new_password: newPassword,
            confirm_password: confirmPassword
        };

        fetch('/change-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('비밀번호가 변경되었습니다!');
                window.location.href = '/login';
            } else {
                alert(data.error);
            }
        }).catch(error => {
            console.error('Error changing password:', error);
        });
    });

    function startTimer(duration) {
        let timer = duration, minutes, seconds;
        clearInterval(timerInterval);
        timerInterval = setInterval(() => {
            minutes = parseInt(timer / 60, 10);
            seconds = parseInt(timer % 60, 10);

            minutes = minutes < 10 ? '0' + minutes : minutes;
            seconds = seconds < 10 ? '0' + seconds : seconds;

            timerDisplay.textContent = minutes + ':' + seconds;

            if (--timer < 0) {
                clearInterval(timerInterval);
                alert('인증 시간이 만료되었습니다.');
                emailInput.disabled = false;
                sendAuthCodeBtn.textContent = '인증메일 보내기';
                authSection.style.display = 'none';
                timerDisplay.textContent = '5:00';
            }
        }, 1000);
    }
</script>
